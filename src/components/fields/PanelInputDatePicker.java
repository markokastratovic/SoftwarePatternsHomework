/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package components.fields;

import components.IGetValue;
import java.time.YearMonth;
import java.util.GregorianCalendar;

/**
 *
 * @author Marko
 */
public class PanelInputDatePicker extends javax.swing.JPanel implements IGetValue {

    /**
     * Creates new form PanelInputDatePicker
     */
    public PanelInputDatePicker() {
        initComponents();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFieldText = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        txtInputField = new javax.swing.JTextField();
        jScroll = new javax.swing.JScrollPane();
        jTbl = new javax.swing.JTable();
        jbtnprev = new javax.swing.JButton();
        jbtnnext = new javax.swing.JButton();
        jlabMonthYear = new javax.swing.JLabel();

        lblFieldText.setText("label");

        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setText("label");

        txtInputField.setText("jTextField1");
        txtInputField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtInputFieldMouseClicked(evt);
            }
        });
        txtInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputFieldActionPerformed(evt);
            }
        });

        jTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblMouseClicked(evt);
            }
        });
        jScroll.setViewportView(jTbl);

        jbtnprev.setText("previous");
        jbtnprev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnprevActionPerformed(evt);
            }
        });

        jbtnnext.setText("next");
        jbtnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnnextActionPerformed(evt);
            }
        });

        jlabMonthYear.setText("MonthYear");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jbtnprev)
                                .addGap(78, 78, 78)
                                .addComponent(jlabMonthYear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnnext)
                                .addGap(31, 31, 31))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnprev)
                        .addComponent(jlabMonthYear))
                    .addComponent(jbtnnext))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputFieldActionPerformed

    }//GEN-LAST:event_txtInputFieldActionPerformed

    private void txtInputFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtInputFieldMouseClicked
        jScroll.setVisible(true);
        jTbl.setVisible(true);
        jbtnnext.setVisible(true);
        jbtnprev.setVisible(true);
        jlabMonthYear.setVisible(true);
    }//GEN-LAST:event_txtInputFieldMouseClicked

    private void jTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblMouseClicked
        int row = jTbl.getSelectedRow();
        int column = jTbl.getSelectedColumn() + 1;
        int day = row * 7 + column;
        int indexDot = jlabMonthYear.getText().indexOf(".");
        int month = Integer.parseInt(jlabMonthYear.getText().substring(0, indexDot));
        int year = Integer.parseInt(jlabMonthYear.getText().substring(indexDot + 1));
        YearMonth yearMonthObject = YearMonth.of(year, month);
        int daysInMonth = yearMonthObject.lengthOfMonth();
        if (day > daysInMonth) {
            day = daysInMonth;
        }

        txtInputField.setText(day + "." + jlabMonthYear.getText());
        jScroll.setVisible(false);
        jTbl.setVisible(false);
        jbtnnext.setVisible(false);
        jbtnprev.setVisible(false);
        jlabMonthYear.setVisible(false);


    }//GEN-LAST:event_jTblMouseClicked

    private void jbtnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnnextActionPerformed
        preparePickerChangeMonth(1);
    }//GEN-LAST:event_jbtnnextActionPerformed

    private void jbtnprevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnprevActionPerformed
        preparePickerChangeMonth(-1);
    }//GEN-LAST:event_jbtnprevActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScroll;
    private javax.swing.JTable jTbl;
    private javax.swing.JButton jbtnnext;
    private javax.swing.JButton jbtnprev;
    private javax.swing.JLabel jlabMonthYear;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFieldText;
    private javax.swing.JTextField txtInputField;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getValue() {
        return txtInputField.getText();
    }

    public javax.swing.JLabel getLblError() {
        return lblError;
    }

    public javax.swing.JLabel getLblFieldText() {
        return lblFieldText;
    }

    public javax.swing.JTextField getTxtInputField() {
        return txtInputField;
    }

    @Override
    public void initialize(Object initValue) {
        txtInputField.setText((String) initValue);
    }

    private void prepareView() {
        jTbl.setVisible(false);
        jbtnnext.setVisible(false);
        jbtnprev.setVisible(false);
        jScroll.setVisible(false);
        jlabMonthYear.setVisible(false);
        txtInputField.setText("              ");
        jlabMonthYear.setText("");
        preparePicker();

    }

    private void preparePicker() {
        int year = new GregorianCalendar().get(GregorianCalendar.YEAR);
        int month = new GregorianCalendar().get(GregorianCalendar.MONTH) + 1;
        YearMonth yearMonthObject = YearMonth.of(year, month);
        int daysInMonth = yearMonthObject.lengthOfMonth();
        for (int i = 1; i <= daysInMonth; i++) {
            jTbl.getModel().setValueAt(i, (i - 1) / 7, (i - 1) % 7);
            jlabMonthYear.setText(month + "." + year);
        }
//         jScroll.setVisible(true);
//        jTbl.setVisible(true);
    }

    private void preparePickerChangeMonth(int offset) {
        int indexDot = jlabMonthYear.getText().indexOf(".");
        int month = Integer.parseInt(jlabMonthYear.getText().substring(0, indexDot));
        int year = Integer.parseInt(jlabMonthYear.getText().substring(indexDot + 1));
        boolean done = false;
        if (month == 1 && offset < 0) {
            month = 12;
            year += offset;
            done = true;
        }
        if (month == 12 && offset > 0) {
            month = 1;
            year += offset;
            done = true;
        }
        if (!done) {
            month += offset;
        }
        YearMonth yearMonthObject = YearMonth.of(year, month);
        int daysInMonth = yearMonthObject.lengthOfMonth();
        jlabMonthYear.setText(month + "." + year);
        //moglo je da ide do daysInMonth
        for (int i = 1; i <= 35; i++) {
            if (i <= daysInMonth) {
                jTbl.getModel().setValueAt(i, (i - 1) / 7, (i - 1) % 7);

            } else {
                jTbl.getModel().setValueAt("", (i - 1) / 7, (i - 1) % 7);
            }

        }

    }

}
